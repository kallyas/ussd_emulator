name: Auto Release

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  test:
    uses: ./.github/workflows/test.yml
    secrets: inherit

  release:
    runs-on: ubuntu-latest
    needs: test
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    env:
      KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install semantic-release
      run: |
        npm install -g semantic-release @semantic-release/changelog @semantic-release/exec @semantic-release/git @semantic-release/github conventional-changelog-conventionalcommits

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.0'
        channel: 'stable'

    - name: Install dependencies
      run: flutter pub get

    - name: Build generated files
      run: flutter packages pub run build_runner build --delete-conflicting-outputs

    - name: Run semantic-release
      id: semantic
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release

    - name: Get release info
      id: release_info
      if: steps.semantic.outputs.new_release_published == 'true'
      run: |
        RELEASE_ID=$(gh release view "${{ steps.semantic.outputs.new_release_version }}" --json id --jq '.id')
        UPLOAD_URL=$(gh release view "${{ steps.semantic.outputs.new_release_version }}" --json uploadUrl --jq '.uploadUrl')
        echo "release_id=$RELEASE_ID" >> $GITHUB_OUTPUT
        echo "upload_url=$UPLOAD_URL" >> $GITHUB_OUTPUT
        echo "tag_name=${{ steps.semantic.outputs.new_release_version }}" >> $GITHUB_OUTPUT
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get version for file names
      id: file_version
      if: steps.semantic.outputs.new_release_published == 'true'
      run: |
        VERSION_BUILD=$(grep "^version:" pubspec.yaml | cut -d' ' -f2 | tr -d '')
        echo "version_build=$VERSION_BUILD" >> $GITHUB_OUTPUT

    - name: Create keystore from secrets
      if: steps.semantic.outputs.new_release_published == 'true' && env.KEYSTORE_BASE64 != ''
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

    - name: Create key.properties
      if: steps.semantic.outputs.new_release_published == 'true' && env.KEYSTORE_BASE64 != ''
      run: |
        echo "storePassword=${{ secrets.STORE_PASSWORD }}" > android/key.properties
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
        echo "storeFile=keystore.jks" >> android/key.properties
      env:
        STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}

    - name: Build APK (Release)
      if: steps.semantic.outputs.new_release_published == 'true' && env.KEYSTORE_BASE64 != ''
      run: flutter build apk --release --split-per-abi

    - name: Build AAB (Release)
      if: steps.semantic.outputs.new_release_published == 'true' && env.KEYSTORE_BASE64 != ''
      run: flutter build appbundle --release

    - name: Build APK (Debug) - fallback if no signing
      if: steps.semantic.outputs.new_release_published == 'true' && secrets.KEYSTORE_BASE64 == ''
      run: flutter build apk --debug

    - name: Upload APK (Universal)
      if: steps.semantic.outputs.new_release_published == 'true' && env.KEYSTORE_BASE64 != ''
      run: |
        gh release upload "${{ steps.release_info.outputs.tag_name }}" 
          "build/app/outputs/flutter-apk/app-release.apk#ussd-emulator-${{ steps.file_version.outputs.version_build }}-universal.apk"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload APK (ARM64)
      if: steps.semantic.outputs.new_release_published == 'true' && env.KEYSTORE_BASE64 != ''
      run: |
        gh release upload "${{ steps.release_info.outputs.tag_name }}" 
          "build/app/outputs/flutter-apk/app-arm64-v8a-release.apk#ussd-emulator-${{ steps.file_version.outputs.version_build }}-arm64.apk"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload APK (ARM)
      if: steps.semantic.outputs.new_release_published == 'true' && env.KEYSTORE_BASE64 != ''
      run: |
        gh release upload "${{ steps.release_info.outputs.tag_name }}" 
          "build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk#ussd-emulator-${{ steps.file_version.outputs.version_build }}-arm.apk"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload APK (x86_64)
      if: steps.semantic.outputs.new_release_published == 'true' && env.KEYSTORE_BASE64 != ''
      run: |
        gh release upload "${{ steps.release_info.outputs.tag_name }}" 
          "build/app/outputs/flutter-apk/app-x86_64-release.apk#ussd-emulator-${{ steps.file_version.outputs.version_build }}-x86_64.apk"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload AAB
      if: steps.semantic.outputs.new_release_published == 'true' && env.KEYSTORE_BASE64 != ''
      run: |
        gh release upload "${{ steps.release_info.outputs.tag_name }}" 
          "build/app/outputs/bundle/release/app-release.aab#ussd-emulator-${{ steps.file_version.outputs.version_build }}.aab"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Debug APK (fallback)
      if: steps.semantic.outputs.new_release_published == 'true' && secrets.KEYSTORE_BASE64 == ''
      run: |
        gh release upload "${{ steps.release_info.outputs.tag_name }}" 
          "build/app/outputs/flutter-apk/app-debug.apk#ussd-emulator-${{ steps.file_version.outputs.version_build }}-debug.apk"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Clean up keystore
      if: always()
      run: rm -f android/app/keystore.jks android/key.properties