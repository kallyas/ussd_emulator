name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  test:
    uses: ./.github/workflows/test.yml
    secrets: inherit

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Needed for version history

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.6'
        channel: 'stable'
        cache: true # Enable caching for faster builds

    - name: Install dependencies
      run: flutter pub get

    - name: Build generated files
      run: flutter packages pub run build_runner build --delete-conflicting-outputs

    - name: Check for keystore
      id: check_keystore
      run: |
        if [ -n "${{ secrets.KEYSTORE_BASE64 }}" ]; then
          echo "has_keystore=true" >> $GITHUB_OUTPUT
        else
          echo "has_keystore=false" >> $GITHUB_OUTPUT
        fi

    - name: Create keystore from secrets
      if: steps.check_keystore.outputs.has_keystore == 'true'
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks

    - name: Create key.properties
      if: steps.check_keystore.outputs.has_keystore == 'true'
      run: |
        cat << EOF > android/key.properties
        storePassword=${{ secrets.STORE_PASSWORD }}
        keyPassword=${{ secrets.KEY_PASSWORD }}
        keyAlias=${{ secrets.KEY_ALIAS }}
        storeFile=keystore.jks
        EOF

    - name: Update version in pubspec.yaml
      run: |
        VERSION="${{ github.event.inputs.version }}"
        # Validate version format
        if ! [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Version must be in format x.y.z (e.g., 1.0.0)"
          exit 1
        fi
        
        # Get current build number and increment it
        CURRENT_BUILD=$(grep "^version:" pubspec.yaml | cut -d'+' -f2 | tr -d '\r')
        NEW_BUILD=$((CURRENT_BUILD + 1))
        
        # Update pubspec.yaml
        sed -i "s/^version:.*/version: $VERSION+$NEW_BUILD/" pubspec.yaml
        
        echo "Updated version to $VERSION+$NEW_BUILD"
        echo "version=$VERSION+$NEW_BUILD" >> $GITHUB_OUTPUT
      id: update_version

    - name: Commit version update
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git commit -am "Bump version to ${{ steps.update_version.outputs.version }}"
        git push

    - name: Build APK (Release)
      if: steps.check_keystore.outputs.has_keystore == 'true'
      run: flutter build apk --release --split-per-abi

    - name: Build AAB (Release)
      if: steps.check_keystore.outputs.has_keystore == 'true'
      run: flutter build appbundle --release

    - name: Build APK (Debug)
      if: steps.check_keystore.outputs.has_keystore == 'false'
      run: flutter build apk --debug

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2 # Updated to maintained action
      with:
        tag_name: v${{ github.event.inputs.version }}
        name: USSD Emulator v${{ github.event.inputs.version }}
        body: |
          ## ðŸš€ USSD Emulator v${{ github.event.inputs.version }} (Manual Release)
          
          ### ðŸ“± Downloads
          - **APK (Universal)**: For most Android devices
          - **APK (ARM64)**: For modern Android devices (recommended)
          - **APK (ARM)**: For older Android devices  
          - **APK (x86_64)**: For Android emulators
          - **AAB**: For Google Play Store distribution
          
          ### ðŸ“‹ Installation
          1. Download the appropriate APK for your device
          2. Enable "Install from unknown sources" in Android settings
          3. Install the APK file
          
          ### ðŸ”§ For Developers
          - Use the AAB file for Play Store uploads
          - Source code is available in this repository
          
          ---
          
          **This is a manual release. For automatic releases, use conventional commits on the main branch.**
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload APK (Universal)
      if: steps.check_keystore.outputs.has_keystore == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.event.inputs.version }}
        files: build/app/outputs/flutter-apk/app-release.apk
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload APK (ARM64)
      if: steps.check_keystore.outputs.has_keystore == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.event.inputs.version }}
        files: build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload APK (ARM)
      if: steps.check_keystore.outputs.has_keystore == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.event.inputs.version }}
        files: build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload APK (x86_64)
      if: steps.check_keystore.outputs.has_keystore == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.event.inputs.version }}
        files: build/app/outputs/flutter-apk/app-x86_64-release.apk
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload AAB
      if: steps.check_keystore.outputs.has_keystore == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.event.inputs.version }}
        files: build/app/outputs/bundle/release/app-release.aab
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Debug APK
      if: steps.check_keystore.outputs.has_keystore == 'false'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.event.inputs.version }}
        files: build/app/outputs/flutter-apk/app-debug.apk
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Clean up keystore
      if: always()
      run: rm -f android/app/keystore.jks android/key.properties