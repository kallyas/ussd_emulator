// Mocks generated by Mockito 5.4.6 from annotations
// in ussd_emulator/test/mocks/test_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i16;
import 'dart:io' as _i6;
import 'dart:ui' as _i3;

import 'package:dio/src/adapter.dart' as _i10;
import 'package:dio/src/cancel_token.dart' as _i29;
import 'package:dio/src/dio.dart' as _i13;
import 'package:dio/src/dio_mixin.dart' as _i9;
import 'package:dio/src/options.dart' as _i8;
import 'package:dio/src/response.dart' as _i12;
import 'package:dio/src/transformer.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i19;
import 'package:shared_preferences/shared_preferences.dart' as _i30;
import 'package:ussd_emulator/models/accessibility_settings.dart' as _i2;
import 'package:ussd_emulator/models/automation_result.dart' as _i21;
import 'package:ussd_emulator/models/endpoint_config.dart' as _i15;
import 'package:ussd_emulator/models/session_template.dart' as _i7;
import 'package:ussd_emulator/models/template_step.dart' as _i28;
import 'package:ussd_emulator/models/ussd_request.dart' as _i23;
import 'package:ussd_emulator/models/ussd_response.dart' as _i4;
import 'package:ussd_emulator/models/ussd_session.dart' as _i5;
import 'package:ussd_emulator/providers/accessibility_provider.dart' as _i17;
import 'package:ussd_emulator/providers/language_provider.dart' as _i18;
import 'package:ussd_emulator/providers/template_provider.dart' as _i20;
import 'package:ussd_emulator/providers/ussd_provider.dart' as _i14;
import 'package:ussd_emulator/services/endpoint_config_service.dart' as _i25;
import 'package:ussd_emulator/services/session_export_service.dart' as _i26;
import 'package:ussd_emulator/services/template_service.dart' as _i27;
import 'package:ussd_emulator/services/ussd_api_service.dart' as _i22;
import 'package:ussd_emulator/services/ussd_session_service.dart' as _i24;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeAccessibilitySettings_0 extends _i1.SmartFake
    implements _i2.AccessibilitySettings {
  _FakeAccessibilitySettings_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLocale_1 extends _i1.SmartFake implements _i3.Locale {
  _FakeLocale_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUssdResponse_2 extends _i1.SmartFake implements _i4.UssdResponse {
  _FakeUssdResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUssdSession_3 extends _i1.SmartFake implements _i5.UssdSession {
  _FakeUssdSession_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFile_4 extends _i1.SmartFake implements _i6.File {
  _FakeFile_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSessionTemplate_5 extends _i1.SmartFake
    implements _i7.SessionTemplate {
  _FakeSessionTemplate_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBaseOptions_6 extends _i1.SmartFake implements _i8.BaseOptions {
  _FakeBaseOptions_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInterceptors_7 extends _i1.SmartFake implements _i9.Interceptors {
  _FakeInterceptors_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeHttpClientAdapter_8 extends _i1.SmartFake
    implements _i10.HttpClientAdapter {
  _FakeHttpClientAdapter_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransformer_9 extends _i1.SmartFake implements _i11.Transformer {
  _FakeTransformer_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_10<T1> extends _i1.SmartFake implements _i12.Response<T1> {
  _FakeResponse_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDio_11 extends _i1.SmartFake implements _i13.Dio {
  _FakeDio_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [UssdProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockUssdProvider extends _i1.Mock implements _i14.UssdProvider {
  MockUssdProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  List<_i5.UssdSession> get sessionHistory =>
      (super.noSuchMethod(
            Invocation.getter(#sessionHistory),
            returnValue: <_i5.UssdSession>[],
          )
          as List<_i5.UssdSession>);

  @override
  List<_i15.EndpointConfig> get endpointConfigs =>
      (super.noSuchMethod(
            Invocation.getter(#endpointConfigs),
            returnValue: <_i15.EndpointConfig>[],
          )
          as List<_i15.EndpointConfig>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i16.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> startSession({
    required String? phoneNumber,
    required String? serviceCode,
    String? networkCode,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#startSession, [], {
              #phoneNumber: phoneNumber,
              #serviceCode: serviceCode,
              #networkCode: networkCode,
            }),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> sendUssdInput(String? input) =>
      (super.noSuchMethod(
            Invocation.method(#sendUssdInput, [input]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> endSession() =>
      (super.noSuchMethod(
            Invocation.method(#endSession, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> clearSessionHistory() =>
      (super.noSuchMethod(
            Invocation.method(#clearSessionHistory, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> addEndpointConfig(_i15.EndpointConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#addEndpointConfig, [config]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> updateEndpointConfig(
    int? index,
    _i15.EndpointConfig? config,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateEndpointConfig, [index, config]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> deleteEndpointConfig(int? index) =>
      (super.noSuchMethod(
            Invocation.method(#deleteEndpointConfig, [index]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> setActiveEndpointConfig(_i15.EndpointConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#setActiveEndpointConfig, [config]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<bool> testEndpointConfig(_i15.EndpointConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#testEndpointConfig, [config]),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AccessibilityProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccessibilityProvider extends _i1.Mock
    implements _i17.AccessibilityProvider {
  MockAccessibilityProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AccessibilitySettings get settings =>
      (super.noSuchMethod(
            Invocation.getter(#settings),
            returnValue: _FakeAccessibilitySettings_0(
              this,
              Invocation.getter(#settings),
            ),
          )
          as _i2.AccessibilitySettings);

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i16.Future<void> toggleAccessibilityEnabled() =>
      (super.noSuchMethod(
            Invocation.method(#toggleAccessibilityEnabled, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> updateSettings(_i2.AccessibilitySettings? newSettings) =>
      (super.noSuchMethod(
            Invocation.method(#updateSettings, [newSettings]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> toggleHighContrast() =>
      (super.noSuchMethod(
            Invocation.method(#toggleHighContrast, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> toggleVoiceInput() =>
      (super.noSuchMethod(
            Invocation.method(#toggleVoiceInput, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> toggleTextToSpeech() =>
      (super.noSuchMethod(
            Invocation.method(#toggleTextToSpeech, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> setTextScaleFactor(double? factor) =>
      (super.noSuchMethod(
            Invocation.method(#setTextScaleFactor, [factor]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> setInputTimeout(Duration? timeout) =>
      (super.noSuchMethod(
            Invocation.method(#setInputTimeout, [timeout]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> toggleHapticFeedback() =>
      (super.noSuchMethod(
            Invocation.method(#toggleHapticFeedback, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  void hapticFeedback() => super.noSuchMethod(
    Invocation.method(#hapticFeedback, []),
    returnValueForMissingStub: null,
  );

  @override
  void announceForScreenReader(String? text) => super.noSuchMethod(
    Invocation.method(#announceForScreenReader, [text]),
    returnValueForMissingStub: null,
  );

  @override
  _i16.Future<void> speak(String? text) =>
      (super.noSuchMethod(
            Invocation.method(#speak, [text]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<String?> startVoiceInput() =>
      (super.noSuchMethod(
            Invocation.method(#startVoiceInput, []),
            returnValue: _i16.Future<String?>.value(),
          )
          as _i16.Future<String?>);

  @override
  _i16.Future<void> stopVoiceInput() =>
      (super.noSuchMethod(
            Invocation.method(#stopVoiceInput, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [LanguageProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguageProvider extends _i1.Mock implements _i18.LanguageProvider {
  MockLanguageProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Locale get currentLocale =>
      (super.noSuchMethod(
            Invocation.getter(#currentLocale),
            returnValue: _FakeLocale_1(this, Invocation.getter(#currentLocale)),
          )
          as _i3.Locale);

  @override
  bool get isRTL =>
      (super.noSuchMethod(Invocation.getter(#isRTL), returnValue: false)
          as bool);

  @override
  _i3.TextDirection get textDirection =>
      (super.noSuchMethod(
            Invocation.getter(#textDirection),
            returnValue: _i3.TextDirection.rtl,
          )
          as _i3.TextDirection);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i16.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> setLocale(_i3.Locale? locale) =>
      (super.noSuchMethod(
            Invocation.method(#setLocale, [locale]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  String getLanguageName(String? languageCode) =>
      (super.noSuchMethod(
            Invocation.method(#getLanguageName, [languageCode]),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.method(#getLanguageName, [languageCode]),
            ),
          )
          as String);

  @override
  Map<_i3.Locale, String> getSupportedLocalesWithNames() =>
      (super.noSuchMethod(
            Invocation.method(#getSupportedLocalesWithNames, []),
            returnValue: <_i3.Locale, String>{},
          )
          as Map<_i3.Locale, String>);

  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [TemplateProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockTemplateProvider extends _i1.Mock implements _i20.TemplateProvider {
  MockTemplateProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  List<_i7.SessionTemplate> get templates =>
      (super.noSuchMethod(
            Invocation.getter(#templates),
            returnValue: <_i7.SessionTemplate>[],
          )
          as List<_i7.SessionTemplate>);

  @override
  List<String> get categories =>
      (super.noSuchMethod(
            Invocation.getter(#categories),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  String get searchQuery =>
      (super.noSuchMethod(
            Invocation.getter(#searchQuery),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.getter(#searchQuery),
            ),
          )
          as String);

  @override
  bool get isExecuting =>
      (super.noSuchMethod(Invocation.getter(#isExecuting), returnValue: false)
          as bool);

  @override
  String get automationStatus =>
      (super.noSuchMethod(
            Invocation.getter(#automationStatus),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.getter(#automationStatus),
            ),
          )
          as String);

  @override
  int get totalTemplates =>
      (super.noSuchMethod(Invocation.getter(#totalTemplates), returnValue: 0)
          as int);

  @override
  int get filteredTemplatesCount =>
      (super.noSuchMethod(
            Invocation.getter(#filteredTemplatesCount),
            returnValue: 0,
          )
          as int);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i16.Future<void> init(_i14.UssdProvider? ussdProvider) =>
      (super.noSuchMethod(
            Invocation.method(#init, [ussdProvider]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<_i7.SessionTemplate?> createTemplate({
    required String? name,
    required String? description,
    required String? serviceCode,
    String? category,
    int? stepDelayMs = 2000,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createTemplate, [], {
              #name: name,
              #description: description,
              #serviceCode: serviceCode,
              #category: category,
              #stepDelayMs: stepDelayMs,
            }),
            returnValue: _i16.Future<_i7.SessionTemplate?>.value(),
          )
          as _i16.Future<_i7.SessionTemplate?>);

  @override
  _i16.Future<bool> updateTemplate(
    String? id,
    _i7.SessionTemplate? updatedTemplate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateTemplate, [id, updatedTemplate]),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);

  @override
  _i16.Future<bool> deleteTemplate(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTemplate, [id]),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);

  @override
  _i7.SessionTemplate? getTemplate(String? id) =>
      (super.noSuchMethod(Invocation.method(#getTemplate, [id]))
          as _i7.SessionTemplate?);

  @override
  _i16.Future<_i7.SessionTemplate?> duplicateTemplate(
    String? id, {
    String? newName,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#duplicateTemplate, [id], {#newName: newName}),
            returnValue: _i16.Future<_i7.SessionTemplate?>.value(),
          )
          as _i16.Future<_i7.SessionTemplate?>);

  @override
  _i16.Future<_i21.AutomationResult?> executeTemplate(
    String? templateId, {
    Map<String, String>? overrideVariables,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #executeTemplate,
              [templateId],
              {#overrideVariables: overrideVariables},
            ),
            returnValue: _i16.Future<_i21.AutomationResult?>.value(),
          )
          as _i16.Future<_i21.AutomationResult?>);

  @override
  _i16.Future<List<_i21.AutomationResult>?> executeBatch(
    List<String>? templateIds, {
    Map<String, String>? globalVariables,
    bool? stopOnFirstFailure = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #executeBatch,
              [templateIds],
              {
                #globalVariables: globalVariables,
                #stopOnFirstFailure: stopOnFirstFailure,
              },
            ),
            returnValue: _i16.Future<List<_i21.AutomationResult>?>.value(),
          )
          as _i16.Future<List<_i21.AutomationResult>?>);

  @override
  void stopExecution() => super.noSuchMethod(
    Invocation.method(#stopExecution, []),
    returnValueForMissingStub: null,
  );

  @override
  _i16.Future<_i7.SessionTemplate?> importTemplate(
    Map<String, dynamic>? json,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#importTemplate, [json]),
            returnValue: _i16.Future<_i7.SessionTemplate?>.value(),
          )
          as _i16.Future<_i7.SessionTemplate?>);

  @override
  Map<String, dynamic>? exportTemplate(String? id) =>
      (super.noSuchMethod(Invocation.method(#exportTemplate, [id]))
          as Map<String, dynamic>?);

  @override
  void searchTemplates(String? query) => super.noSuchMethod(
    Invocation.method(#searchTemplates, [query]),
    returnValueForMissingStub: null,
  );

  @override
  void filterByCategory(String? category) => super.noSuchMethod(
    Invocation.method(#filterByCategory, [category]),
    returnValueForMissingStub: null,
  );

  @override
  void clearFilters() => super.noSuchMethod(
    Invocation.method(#clearFilters, []),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> getStatistics() =>
      (super.noSuchMethod(
            Invocation.method(#getStatistics, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  bool validateTemplate(_i7.SessionTemplate? template) =>
      (super.noSuchMethod(
            Invocation.method(#validateTemplate, [template]),
            returnValue: false,
          )
          as bool);

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  void clearLastExecutionResult() => super.noSuchMethod(
    Invocation.method(#clearLastExecutionResult, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [UssdApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUssdApiService extends _i1.Mock implements _i22.UssdApiService {
  MockUssdApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Future<_i4.UssdResponse> sendUssdRequest(
    _i23.UssdRequest? request,
    _i15.EndpointConfig? config,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#sendUssdRequest, [request, config]),
            returnValue: _i16.Future<_i4.UssdResponse>.value(
              _FakeUssdResponse_2(
                this,
                Invocation.method(#sendUssdRequest, [request, config]),
              ),
            ),
          )
          as _i16.Future<_i4.UssdResponse>);

  @override
  _i16.Future<bool> testEndpoint(_i15.EndpointConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#testEndpoint, [config]),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);
}

/// A class which mocks [UssdSessionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUssdSessionService extends _i1.Mock
    implements _i24.UssdSessionService {
  MockUssdSessionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i5.UssdSession> get sessionHistory =>
      (super.noSuchMethod(
            Invocation.getter(#sessionHistory),
            returnValue: <_i5.UssdSession>[],
          )
          as List<_i5.UssdSession>);

  @override
  _i16.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<_i5.UssdSession> startSession({
    required String? phoneNumber,
    required String? serviceCode,
    String? networkCode,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#startSession, [], {
              #phoneNumber: phoneNumber,
              #serviceCode: serviceCode,
              #networkCode: networkCode,
            }),
            returnValue: _i16.Future<_i5.UssdSession>.value(
              _FakeUssdSession_3(
                this,
                Invocation.method(#startSession, [], {
                  #phoneNumber: phoneNumber,
                  #serviceCode: serviceCode,
                  #networkCode: networkCode,
                }),
              ),
            ),
          )
          as _i16.Future<_i5.UssdSession>);

  @override
  _i16.Future<_i5.UssdSession> addRequest(_i23.UssdRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#addRequest, [request]),
            returnValue: _i16.Future<_i5.UssdSession>.value(
              _FakeUssdSession_3(
                this,
                Invocation.method(#addRequest, [request]),
              ),
            ),
          )
          as _i16.Future<_i5.UssdSession>);

  @override
  _i16.Future<_i5.UssdSession> addResponse(_i4.UssdResponse? response) =>
      (super.noSuchMethod(
            Invocation.method(#addResponse, [response]),
            returnValue: _i16.Future<_i5.UssdSession>.value(
              _FakeUssdSession_3(
                this,
                Invocation.method(#addResponse, [response]),
              ),
            ),
          )
          as _i16.Future<_i5.UssdSession>);

  @override
  _i16.Future<_i5.UssdSession> addUserInputToPath(String? userInput) =>
      (super.noSuchMethod(
            Invocation.method(#addUserInputToPath, [userInput]),
            returnValue: _i16.Future<_i5.UssdSession>.value(
              _FakeUssdSession_3(
                this,
                Invocation.method(#addUserInputToPath, [userInput]),
              ),
            ),
          )
          as _i16.Future<_i5.UssdSession>);

  @override
  _i16.Future<void> endSession() =>
      (super.noSuchMethod(
            Invocation.method(#endSession, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> clearHistory() =>
      (super.noSuchMethod(
            Invocation.method(#clearHistory, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);
}

/// A class which mocks [EndpointConfigService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEndpointConfigService extends _i1.Mock
    implements _i25.EndpointConfigService {
  MockEndpointConfigService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i15.EndpointConfig> get configs =>
      (super.noSuchMethod(
            Invocation.getter(#configs),
            returnValue: <_i15.EndpointConfig>[],
          )
          as List<_i15.EndpointConfig>);

  @override
  _i16.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> addConfig(_i15.EndpointConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#addConfig, [config]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> updateConfig(int? index, _i15.EndpointConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#updateConfig, [index, config]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> deleteConfig(int? index) =>
      (super.noSuchMethod(
            Invocation.method(#deleteConfig, [index]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<void> setActiveConfig(_i15.EndpointConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#setActiveConfig, [config]),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);
}

/// A class which mocks [SessionExportService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSessionExportService extends _i1.Mock
    implements _i26.SessionExportService {
  MockSessionExportService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Future<_i6.File> exportSession(
    _i5.UssdSession? session,
    _i26.ExportFormat? format, {
    _i15.EndpointConfig? endpointConfig,
    String? customFileName,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #exportSession,
              [session, format],
              {
                #endpointConfig: endpointConfig,
                #customFileName: customFileName,
              },
            ),
            returnValue: _i16.Future<_i6.File>.value(
              _FakeFile_4(
                this,
                Invocation.method(
                  #exportSession,
                  [session, format],
                  {
                    #endpointConfig: endpointConfig,
                    #customFileName: customFileName,
                  },
                ),
              ),
            ),
          )
          as _i16.Future<_i6.File>);

  @override
  _i16.Future<_i6.File> exportMultipleSessions(
    List<_i5.UssdSession>? sessions,
    _i26.ExportFormat? format, {
    String? customFileName,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #exportMultipleSessions,
              [sessions, format],
              {#customFileName: customFileName},
            ),
            returnValue: _i16.Future<_i6.File>.value(
              _FakeFile_4(
                this,
                Invocation.method(
                  #exportMultipleSessions,
                  [sessions, format],
                  {#customFileName: customFileName},
                ),
              ),
            ),
          )
          as _i16.Future<_i6.File>);

  @override
  _i16.Future<void> shareSession(
    _i5.UssdSession? session,
    _i26.ExportFormat? format, {
    _i15.EndpointConfig? endpointConfig,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #shareSession,
              [session, format],
              {#endpointConfig: endpointConfig},
            ),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<String?> saveSessionWithDialog(
    _i5.UssdSession? session,
    _i26.ExportFormat? format, {
    _i15.EndpointConfig? endpointConfig,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #saveSessionWithDialog,
              [session, format],
              {#endpointConfig: endpointConfig},
            ),
            returnValue: _i16.Future<String?>.value(),
          )
          as _i16.Future<String?>);
}

/// A class which mocks [TemplateService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTemplateService extends _i1.Mock implements _i27.TemplateService {
  MockTemplateService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i7.SessionTemplate> get templates =>
      (super.noSuchMethod(
            Invocation.getter(#templates),
            returnValue: <_i7.SessionTemplate>[],
          )
          as List<_i7.SessionTemplate>);

  @override
  _i16.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);

  @override
  _i16.Future<_i7.SessionTemplate> createTemplate({
    required String? name,
    required String? description,
    required String? serviceCode,
    List<_i28.TemplateStep>? steps,
    Map<String, String>? variables,
    int? stepDelayMs = 2000,
    String? category,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createTemplate, [], {
              #name: name,
              #description: description,
              #serviceCode: serviceCode,
              #steps: steps,
              #variables: variables,
              #stepDelayMs: stepDelayMs,
              #category: category,
            }),
            returnValue: _i16.Future<_i7.SessionTemplate>.value(
              _FakeSessionTemplate_5(
                this,
                Invocation.method(#createTemplate, [], {
                  #name: name,
                  #description: description,
                  #serviceCode: serviceCode,
                  #steps: steps,
                  #variables: variables,
                  #stepDelayMs: stepDelayMs,
                  #category: category,
                }),
              ),
            ),
          )
          as _i16.Future<_i7.SessionTemplate>);

  @override
  _i16.Future<_i7.SessionTemplate?> updateTemplate(
    String? id,
    _i7.SessionTemplate? updatedTemplate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateTemplate, [id, updatedTemplate]),
            returnValue: _i16.Future<_i7.SessionTemplate?>.value(),
          )
          as _i16.Future<_i7.SessionTemplate?>);

  @override
  _i16.Future<bool> deleteTemplate(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTemplate, [id]),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);

  @override
  _i7.SessionTemplate? getTemplate(String? id) =>
      (super.noSuchMethod(Invocation.method(#getTemplate, [id]))
          as _i7.SessionTemplate?);

  @override
  List<_i7.SessionTemplate> getTemplatesByCategory(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#getTemplatesByCategory, [category]),
            returnValue: <_i7.SessionTemplate>[],
          )
          as List<_i7.SessionTemplate>);

  @override
  List<String> getCategories() =>
      (super.noSuchMethod(
            Invocation.method(#getCategories, []),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  List<_i7.SessionTemplate> searchTemplates(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchTemplates, [query]),
            returnValue: <_i7.SessionTemplate>[],
          )
          as List<_i7.SessionTemplate>);

  @override
  _i16.Future<_i7.SessionTemplate> duplicateTemplate(
    String? id, {
    String? newName,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#duplicateTemplate, [id], {#newName: newName}),
            returnValue: _i16.Future<_i7.SessionTemplate>.value(
              _FakeSessionTemplate_5(
                this,
                Invocation.method(
                  #duplicateTemplate,
                  [id],
                  {#newName: newName},
                ),
              ),
            ),
          )
          as _i16.Future<_i7.SessionTemplate>);

  @override
  Map<String, dynamic> exportTemplate(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#exportTemplate, [id]),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i16.Future<_i7.SessionTemplate> importTemplate(Map<String, dynamic>? json) =>
      (super.noSuchMethod(
            Invocation.method(#importTemplate, [json]),
            returnValue: _i16.Future<_i7.SessionTemplate>.value(
              _FakeSessionTemplate_5(
                this,
                Invocation.method(#importTemplate, [json]),
              ),
            ),
          )
          as _i16.Future<_i7.SessionTemplate>);

  @override
  _i16.Future<_i6.File> exportAllTemplates() =>
      (super.noSuchMethod(
            Invocation.method(#exportAllTemplates, []),
            returnValue: _i16.Future<_i6.File>.value(
              _FakeFile_4(this, Invocation.method(#exportAllTemplates, [])),
            ),
          )
          as _i16.Future<_i6.File>);

  @override
  _i16.Future<List<_i7.SessionTemplate>> importTemplatesFromFile(
    _i6.File? file,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#importTemplatesFromFile, [file]),
            returnValue: _i16.Future<List<_i7.SessionTemplate>>.value(
              <_i7.SessionTemplate>[],
            ),
          )
          as _i16.Future<List<_i7.SessionTemplate>>);

  @override
  bool validateTemplate(_i7.SessionTemplate? template) =>
      (super.noSuchMethod(
            Invocation.method(#validateTemplate, [template]),
            returnValue: false,
          )
          as bool);

  @override
  Map<String, dynamic> getStatistics() =>
      (super.noSuchMethod(
            Invocation.method(#getStatistics, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i16.Future<void> clearAllTemplates() =>
      (super.noSuchMethod(
            Invocation.method(#clearAllTemplates, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i13.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.BaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeBaseOptions_6(this, Invocation.getter(#options)),
          )
          as _i8.BaseOptions);

  @override
  _i9.Interceptors get interceptors =>
      (super.noSuchMethod(
            Invocation.getter(#interceptors),
            returnValue: _FakeInterceptors_7(
              this,
              Invocation.getter(#interceptors),
            ),
          )
          as _i9.Interceptors);

  @override
  _i10.HttpClientAdapter get httpClientAdapter =>
      (super.noSuchMethod(
            Invocation.getter(#httpClientAdapter),
            returnValue: _FakeHttpClientAdapter_8(
              this,
              Invocation.getter(#httpClientAdapter),
            ),
          )
          as _i10.HttpClientAdapter);

  @override
  _i11.Transformer get transformer =>
      (super.noSuchMethod(
            Invocation.getter(#transformer),
            returnValue: _FakeTransformer_9(
              this,
              Invocation.getter(#transformer),
            ),
          )
          as _i11.Transformer);

  @override
  set options(_i8.BaseOptions? value) => super.noSuchMethod(
    Invocation.setter(#options, value),
    returnValueForMissingStub: null,
  );

  @override
  set httpClientAdapter(_i10.HttpClientAdapter? value) => super.noSuchMethod(
    Invocation.setter(#httpClientAdapter, value),
    returnValueForMissingStub: null,
  );

  @override
  set transformer(_i11.Transformer? value) => super.noSuchMethod(
    Invocation.setter(#transformer, value),
    returnValueForMissingStub: null,
  );

  @override
  void close({bool? force = false}) => super.noSuchMethod(
    Invocation.method(#close, [], {#force: force}),
    returnValueForMissingStub: null,
  );

  @override
  _i16.Future<_i12.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
    _i29.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #head,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i16.Future<_i12.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #head,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<T>>);

  @override
  _i16.Future<_i12.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i8.Options? options,
    _i29.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #headUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i16.Future<_i12.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #headUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<T>>);

  @override
  _i16.Future<_i12.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
    _i29.CancelToken? cancelToken,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i16.Future<_i12.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #get,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<T>>);

  @override
  _i16.Future<_i12.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i8.Options? options,
    _i29.CancelToken? cancelToken,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i16.Future<_i12.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #getUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<T>>);

  @override
  _i16.Future<_i12.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
    _i29.CancelToken? cancelToken,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i16.Future<_i12.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #post,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<T>>);

  @override
  _i16.Future<_i12.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i8.Options? options,
    _i29.CancelToken? cancelToken,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #postUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i16.Future<_i12.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #postUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<T>>);

  @override
  _i16.Future<_i12.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
    _i29.CancelToken? cancelToken,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i16.Future<_i12.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #put,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<T>>);

  @override
  _i16.Future<_i12.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i8.Options? options,
    _i29.CancelToken? cancelToken,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #putUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i16.Future<_i12.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #putUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<T>>);

  @override
  _i16.Future<_i12.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
    _i29.CancelToken? cancelToken,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i16.Future<_i12.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #patch,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<T>>);

  @override
  _i16.Future<_i12.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i8.Options? options,
    _i29.CancelToken? cancelToken,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patchUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i16.Future<_i12.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #patchUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<T>>);

  @override
  _i16.Future<_i12.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
    _i29.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i16.Future<_i12.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #delete,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<T>>);

  @override
  _i16.Future<_i12.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i8.Options? options,
    _i29.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #deleteUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i16.Future<_i12.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #deleteUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<T>>);

  @override
  _i16.Future<_i12.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i8.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i29.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i8.FileAccessMode? fileAccessMode = _i8.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i8.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #download,
              [urlPath, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i16.Future<_i12.Response<dynamic>>.value(
              _FakeResponse_10<dynamic>(
                this,
                Invocation.method(
                  #download,
                  [urlPath, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<dynamic>>);

  @override
  _i16.Future<_i12.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i8.ProgressCallback? onReceiveProgress,
    _i29.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i8.FileAccessMode? fileAccessMode = _i8.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i8.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #downloadUri,
              [uri, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i16.Future<_i12.Response<dynamic>>.value(
              _FakeResponse_10<dynamic>(
                this,
                Invocation.method(
                  #downloadUri,
                  [uri, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<dynamic>>);

  @override
  _i16.Future<_i12.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i29.CancelToken? cancelToken,
    _i8.Options? options,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #request,
              [url],
              {
                #data: data,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i16.Future<_i12.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #request,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<T>>);

  @override
  _i16.Future<_i12.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i29.CancelToken? cancelToken,
    _i8.Options? options,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #requestUri,
              [uri],
              {
                #data: data,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i16.Future<_i12.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(
                  #requestUri,
                  [uri],
                  {
                    #data: data,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i16.Future<_i12.Response<T>>);

  @override
  _i16.Future<_i12.Response<T>> fetch<T>(_i8.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
            Invocation.method(#fetch, [requestOptions]),
            returnValue: _i16.Future<_i12.Response<T>>.value(
              _FakeResponse_10<T>(
                this,
                Invocation.method(#fetch, [requestOptions]),
              ),
            ),
          )
          as _i16.Future<_i12.Response<T>>);

  @override
  _i13.Dio clone({
    _i8.BaseOptions? options,
    _i9.Interceptors? interceptors,
    _i10.HttpClientAdapter? httpClientAdapter,
    _i11.Transformer? transformer,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#clone, [], {
              #options: options,
              #interceptors: interceptors,
              #httpClientAdapter: httpClientAdapter,
              #transformer: transformer,
            }),
            returnValue: _FakeDio_11(
              this,
              Invocation.method(#clone, [], {
                #options: options,
                #interceptors: interceptors,
                #httpClientAdapter: httpClientAdapter,
                #transformer: transformer,
              }),
            ),
          )
          as _i13.Dio);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i30.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() =>
      (super.noSuchMethod(
            Invocation.method(#getKeys, []),
            returnValue: <String>{},
          )
          as Set<String>);

  @override
  Object? get(String? key) =>
      (super.noSuchMethod(Invocation.method(#get, [key])) as Object?);

  @override
  bool? getBool(String? key) =>
      (super.noSuchMethod(Invocation.method(#getBool, [key])) as bool?);

  @override
  int? getInt(String? key) =>
      (super.noSuchMethod(Invocation.method(#getInt, [key])) as int?);

  @override
  double? getDouble(String? key) =>
      (super.noSuchMethod(Invocation.method(#getDouble, [key])) as double?);

  @override
  String? getString(String? key) =>
      (super.noSuchMethod(Invocation.method(#getString, [key])) as String?);

  @override
  bool containsKey(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [key]),
            returnValue: false,
          )
          as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(#getStringList, [key]))
          as List<String>?);

  @override
  _i16.Future<bool> setBool(String? key, bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setBool, [key, value]),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);

  @override
  _i16.Future<bool> setInt(String? key, int? value) =>
      (super.noSuchMethod(
            Invocation.method(#setInt, [key, value]),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);

  @override
  _i16.Future<bool> setDouble(String? key, double? value) =>
      (super.noSuchMethod(
            Invocation.method(#setDouble, [key, value]),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);

  @override
  _i16.Future<bool> setString(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setString, [key, value]),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);

  @override
  _i16.Future<bool> setStringList(String? key, List<String>? value) =>
      (super.noSuchMethod(
            Invocation.method(#setStringList, [key, value]),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);

  @override
  _i16.Future<bool> remove(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#remove, [key]),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);

  @override
  _i16.Future<bool> commit() =>
      (super.noSuchMethod(
            Invocation.method(#commit, []),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);

  @override
  _i16.Future<bool> clear() =>
      (super.noSuchMethod(
            Invocation.method(#clear, []),
            returnValue: _i16.Future<bool>.value(false),
          )
          as _i16.Future<bool>);

  @override
  _i16.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i16.Future<void>.value(),
            returnValueForMissingStub: _i16.Future<void>.value(),
          )
          as _i16.Future<void>);
}
